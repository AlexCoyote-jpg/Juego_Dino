üß≠ Gu√≠a de implementaci√≥n: Escalado responsivo animado en Pygame
Este sistema permite escalar din√°micamente elementos visuales como fuentes, tama√±os, posiciones y rect√°ngulos de forma animada y fluida, ideal para juegos educativos, UI adaptativa o interfaces amigables con redimensionamiento.
üì¶ M√≥dulos necesarios
Aseg√∫rate de tener los siguientes archivos:

core/scale/responsive_scaler_animated.py

(opcional) core/decoration/background_game.py ‚Üí si est√°s usando un fondo animado responsivo.

‚úÖ 1. C√≥mo usar ResponsiveScalerAnimado
üìå Paso 1: Importar y crear instancia
from core.scale.responsive_scaler_animated import ResponsiveScalerAnimado

# Tama√±o inicial (puedes usar cualquier resoluci√≥n base)
scaler = ResponsiveScalerAnimado(initial_width=800, initial_height=600, uniform=True)

üìå Paso 2: Aplicar en cada frame
Llama a .tick() para animar suavemente la transici√≥n:
scaler.tick()

‚úÖ 2. Adaptar a cambios de tama√±o
Captura el evento VIDEORESIZE para actualizar el tama√±o deseado:

for event in pygame.event.get():
    if event.type == pygame.VIDEORESIZE:
        scaler.update(event.w, event.h)
Esto activa el escalado suave con interpolaci√≥n.

‚úÖ 3. Usar escalado en elementos gr√°ficos
üìê Escalar valores individuales:
x_px = scaler.sx(100)   # Escala X
y_px = scaler.sy(60)    # Escala Y
font_px = scaler.sf(24) # Escala de fuente

üî≤ Centrar y escalar un rect√°ngulo

x, y, w, h = scaler.get_centered_rect(300, 200)
pygame.draw.rect(screen, (0, 200, 255), (x, y, w, h), border_radius=15)

üìù Escalar texto de forma responsiva
font = pygame.font.SysFont("Arial", scaler.sf(36))
texto = font.render("Responsive UI", True, (255, 255, 255))
text_rect = texto.get_rect(center=(scaler.current_width // 2, scaler.sy(50)))
screen.blit(texto, text_rect)

üéÆ Ejemplo completo de uso

import pygame
from core.scale.responsive_scaler_animated import ResponsiveScalerAnimado

def main():
    pygame.init()
    screen = pygame.display.set_mode((800, 600), pygame.RESIZABLE)
    pygame.display.set_caption("ResponsiveScalerAnimado Test")

    scaler = ResponsiveScalerAnimado(initial_width=800, initial_height=600, uniform=True)
    clock = pygame.time.Clock()

    running = True
    while running:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False
            elif event.type == pygame.VIDEORESIZE:
                scaler.update(event.w, event.h)

        scaler.tick()
        screen.fill((30, 30, 30))

        # Dibujo de un rect√°ngulo escalado centrado
        rect = scaler.get_centered_rect(300, 200)
        pygame.draw.rect(screen, (0, 200, 255), rect, border_radius=15)

        # Texto adaptativo
        font = pygame.font.SysFont("Arial", scaler.sf(36))
        text = font.render("Responsive UI", True, (255, 255, 255))
        text_rect = text.get_rect(center=(scaler.current_width // 2, scaler.sy(50)))
        screen.blit(text, text_rect)

        pygame.display.flip()
        clock.tick(60)

    pygame.quit()

if __name__ == "__main__":
    main()


